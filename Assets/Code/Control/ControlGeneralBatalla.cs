//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó mediante una herramienta.
//     Los cambios del archivo se perderán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using UnityEngine;
using System.Collections.Generic;

public class ControlGeneralBatalla : ControlGeneral {
	
	//--------------------------
	// Variables, gets and sets
	//--------------------------
	
	public int torn{
		get;
		set;
	}

	public Partida p{
		get{ return this.p;}
		set{ this.p = value;}
	}

	public Tauler tauler{
		get;
		set;
	}

	public PartGrafica pG{
		get{return this.pG;}
		set{this.pG = value;}
	}

	public GraphicBridge gB{
		get{return this.gB;}
		set{this.gB = value;}
	}

	public Moviment movimentActual{
		get;
		set;
	}

	public bool canviTorn{
		get;
		set;
	}

	public ExternUserDeck IAdeck{
		get{return this.IAdeck;}
		set{this.IAdeck = value;}
	}

	public Partida partida{
		get;
		set;
	}

	public DataBaseBridge databaseBridge{
		get{return this.databaseBridge;}
		set{this.databaseBridge = value;}
	}

	public PartGrafica partGrafica{
		get;
		set;
	}

	public GraphicBridge GraphicBridge{
		get{return this.GraphicBridge;}
		set{this.GraphicBridge = value;}
	}
	
	public int usuariTorn;
	public Estadistiques estadistiques;
	public Baralla barallaUsuari;
	private Baralla barallaRival;
	public bool iniciPartida = false;
	private bool carregaBaralla = false;
	public int cartesBase = 5;
	public bool IA = true;
	public bool multijugadorLocal = false;
	public bool multijugadorOnline = false;
	private int jugador = 1;
	public bool partidaAbandonada = false;
	public delegate void Fi();
  	public static event Fi fiPantalla;
	public int nombreTorns = 0;
	
	// Variables estadístiques
	public int atacRebut = 0;
	public int atacFet = 0;
	public int cartesUtilitzades = 0;
	public int cartesNoUtilitzades = 0;
	public int nombreAccions = 0;
	public float tempsPartida = 0.0f;
	public float startTime;
	public float endTime;
	public int personatgesUtilitzats = 0;
	public int bonificacionsUtilitzades = 0;
	public List<string> llistaLog = new List<string>();
	
	//-------------------------------
	// Methods, functions and actions
	//-------------------------------
	
	void Awake(){
		// Carrega d'elements interns
		ControlGeneralJoc cJ = (ControlGeneralJoc) GameObject.FindObjectOfType(typeof(ControlGeneralJoc));
		estadistiques = new Estadistiques(cJ.getScenario());
		startTime = Time.time;
		// Carrega de tots els elements de la pantalla
		Debug.Log("AWAKE del ControlGeneralBatalla");
		if(cJ.getEscenari().Equals("Bosc")){
			GameObject.Instantiate(Resources.Load("Background_Grass"));
			GameObject.Instantiate(Resources.Load("Tauler_Grass"));
		}
		else if(cJ.getEscenari().Equals("Winter")){
			GameObject.Instantiate(Resources.Load("Background_Winter"));
			GameObject.Instantiate(Resources.Load("Tauler_Grass"));
		}
		else if(cJ.getEscenari().Equals("Cave")){
			GameObject.Instantiate(Resources.Load("Background_Cave"));
			GameObject.Instantiate(Resources.Load("Tauler_Grass"));
		}
		GameObject.Instantiate(Resources.Load("Base"));
		GameObject.Instantiate(Resources.Load("BaseRival"));
		GameObject.Instantiate(Resources.Load("MenuCartesDisponibles"));
		GameObject.Instantiate(Resources.Load("BotoEsborrarMoviment"));
		GameObject.Instantiate(Resources.Load("BotoConfirmarMoviment"));
		GameObject.Instantiate(Resources.Load("BotoPausa"));
		GameObject.Instantiate(Resources.Load("Lifebar"));
		GameObject.Instantiate(Resources.Load("Personatge"));
		
		// Assignació de Scripts necessaris a la càmara principal
		//Camera.mainCamera.gameObject.AddComponent("AnimacioSeleccioTorn");
		Camera.mainCamera.gameObject.AddComponent("PartGrafica");
		Camera.mainCamera.gameObject.AddComponent("IA");
#if UNITY_ANDROID
		Camera.mainCamera.gameObject.AddComponent("Connexio");
#elif UNITY_STANDALONE
		Camera.mainCamera.gameObject.AddComponent("Connexio");
#endif
		// Assignació d'events
		AnimacioPantalles.carregaBaralles += carregaBaralles;
		Personatge.mortPersonatge += mortPersonatge;
		Base.fiBatalla += fiBatalla;
		
		// Carrega d'elements externs
		tauler = (Tauler) (GameObject.FindGameObjectWithTag("Tauler")).GetComponent("Tauler");
	}
	
	// Use this for initialization
	void Start () {
		Debug.Log("START del ControlGeneralBatalla");
		AudioObject a = (AudioObject) GameObject.FindObjectOfType(typeof(AudioObject));
		a.FadeSoundLow();
	}
	
	// Update is called once per frame
	void Update () {
		// Si es detecta un canvi de torn, es canvia el jugador actual
		if(canviTorn){
			// Comprovem si a l'usuari li queda alguna acció per fer...
			Debug.Log("Entrem al canvi de torn.");
			if(movimentActual.getAccionsDisponibles() == 0) acabarTorn();
			else{
				// Mostra de la pantalla d'error "HAS DE GASTAR TOTES LES ACCIONS"
				canviTorn = false;
			}
		}
		
		// Gestió de torns
		if(carregaBaralla && usuariTorn == 1){	// Torn del jugador local
			llistaLog.Add("INICI TORN JUGADOR " + usuariTorn);
			if(IA){
				// IA stuff
				MenuCartesDisponibles m = (MenuCartesDisponibles) (GameObject.FindGameObjectWithTag("MenuCartesDisponibles")).GetComponent("MenuCartesDisponibles");
				bool personatgesBaralla = barallaUsuari.comprovarPersonatges();
				if(!personatgesBaralla){
					bool personatgesTauler = tauler.comprovarPersonatges(usuariTorn);
					if(!personatgesTauler){
						// No te mes personatges, ha perdut...
						// Event i animació de fi de partida...
						llistaLog.Add("FINAL PARTIDA PER FALTA DE PERSONATGES");
						llistaLog.Add("GUANYADOR: Jugador 2");
						ControlGeneralJoc cJ = (ControlGeneralJoc) Camera.mainCamera.GetComponent("ControlGeneralJoc");
						cJ.assignarGuanyador(2);
						cJ.assignarDadesFinalPartida(atacFet, atacRebut, cartesUtilitzades, nombreAccions, startTime, llistaLog, personatgesUtilitzats, bonificacionsUtilitzades);
						fiPantalla();
					}
				}
				m.ocultarCartes(usuariTorn);
				m.demanarInformacioCartesNoves(barallaUsuari);
			}else if(multijugadorOnline){
				// Si multijugadorOnline, actualitzar el tauler amb l'últim moviment...
			}else if(multijugadorLocal){
				// Posar visibles les cartes disponibles i carregar les que facin falta...
				MenuCartesDisponibles m = (MenuCartesDisponibles) (GameObject.FindGameObjectWithTag("MenuCartesDisponibles")).GetComponent("MenuCartesDisponibles");
				bool personatgesBaralla = barallaUsuari.comprovarPersonatges();
				if(!personatgesBaralla){
					bool personatgesTauler = tauler.comprovarPersonatges(usuariTorn);
					if(!personatgesTauler){
						// No te mes personatges, ha perdut...
						// Event i animació de fi de partida...
						llistaLog.Add("FINAL PARTIDA PER FALTA DE PERSONATGES");
						llistaLog.Add("GUANYADOR: Jugador 2");
						ControlGeneralJoc cJ = (ControlGeneralJoc) Camera.mainCamera.GetComponent("ControlGeneralJoc");
						cJ.assignarGuanyador(2);
						cJ.assignarDadesFinalPartida(atacFet, atacRebut, cartesUtilitzades, nombreAccions, startTime, llistaLog, personatgesUtilitzats, bonificacionsUtilitzades);
						fiPantalla();
					}
				}
				m.ocultarCartes(usuariTorn);
				m.demanarInformacioCartesNoves(barallaUsuari);
			}
			comensarTorn();
		}else if(carregaBaralla && usuariTorn == 2){	// Torn del jugador rival
			llistaLog.Add("INICI TORN JUGADOR " + usuariTorn);
			if(IA){		// Si el rival es una IA
				bool personatgesBaralla = barallaRival.comprovarPersonatges();
				if(!personatgesBaralla){
					bool personatgesTauler = tauler.comprovarPersonatges(usuariTorn);
					if(!personatgesTauler){
						// No te mes personatges, ha perdut...
						// Event i animació de fi de partida...
						llistaLog.Add("FINAL PARTIDA PER FALTA DE PERSONATGES");
						llistaLog.Add("GUANYADOR: Jugador 1");
						ControlGeneralJoc cJ = (ControlGeneralJoc) Camera.mainCamera.GetComponent("ControlGeneralJoc");
						cJ.assignarGuanyador(1);
						cJ.assignarDadesFinalPartida(atacFet, atacRebut, cartesUtilitzades, nombreAccions, startTime, llistaLog, personatgesUtilitzats, bonificacionsUtilitzades);
						fiPantalla();
					}else{

					}
				}
			}else if(multijugadorLocal){
				// Carrega de la baralla del jugador 2
				MenuCartesDisponibles m = (MenuCartesDisponibles) (GameObject.FindGameObjectWithTag("MenuCartesDisponibles")).GetComponent("MenuCartesDisponibles");
				bool personatgesBaralla = barallaRival.comprovarPersonatges();
				if(!personatgesBaralla){
					bool personatgesTauler = tauler.comprovarPersonatges(usuariTorn);
					if(!personatgesTauler){
						// No te mes personatges, ha perdut...
						// Event i animació de fi de partida...
						llistaLog.Add("FINAL PARTIDA PER FALTA DE PERSONATGES");
						llistaLog.Add("GUANYADOR: Jugador 1");
						ControlGeneralJoc cJ = (ControlGeneralJoc) Camera.mainCamera.GetComponent("ControlGeneralJoc");
						cJ.assignarGuanyador(1);
						cJ.assignarDadesFinalPartida(atacFet, atacRebut, cartesUtilitzades, nombreAccions, startTime, llistaLog, personatgesUtilitzats, bonificacionsUtilitzades);
						fiPantalla();
					}
				}
				m.ocultarCartes(usuariTorn);
				m.demanarInformacioCartesNovesRival(barallaRival);
				
			}else if(multijugadorOnline){
				// Possible animació petita d'espera
			}
			comensarTorn();
			if(IA){
				// Avisem a la IA de que ja pot fer moviments
				IA ia = (IA) Camera.mainCamera.gameObject.GetComponent("IA");
				ia.activar();
			}
		}
	}
	
	public void comensarTorn(){
		movimentActual = new Moviment(usuariTorn);
		carregaBaralla = false;
		Debug.Log("Inici de torn pel jugador " + usuariTorn);
		if(usuariTorn == 1 && nombreTorns == 0){
			AudioObject a = (AudioObject) GameObject.FindObjectOfType(typeof(AudioObject));
			a.playBattleMusic();
		}
		nombreTorns++;
	}
	
	// Gestionem la informació del torn, del moviment fet i de les accions fetes,
	// per guardar-les com dades de la partida actual...
	public void acabarTorn(){
		canviTorn = false;
		usuariTorn = usuariSeguent();
		partida.actualitzarEstatTauler(tauler);
		// Part de mostrar la pantalla de canvi de torn
		partida.augmentarNombreMoviments();
		partida.augmentarNombreTorns();
		carregaBaralla = true;
	}
	
	public void ferCanviTorn(){
		canviTorn = true;
	}

	public void iniciarPartida(){
		barallaUsuari = new Baralla("Usuari");
		if(IA){
			// Carregar la baralla de la IA
			barallaRival = new Baralla("RivalLocal");
			IA ia = (IA) Camera.mainCamera.gameObject.GetComponent("IA");
			ia.assignarBaralla(barallaRival);
		}else if(multijugadorLocal){
			// Carregar la baralla del jugador local 2
			barallaRival = new Baralla("RivalLocal");
		}else if(multijugadorOnline){
			// Carregar la baralla del jugador online
		}
		AnimacioPantalles a = (AnimacioPantalles) Camera.mainCamera.GetComponent("AnimacioPantalles");
		if(a == null){
			AnimacioPantallesEdicioFinal b = (AnimacioPantallesEdicioFinal) Camera.mainCamera.GetComponent("AnimacioPantallesEdicioFinal");
			b.obertura = false;
		}else a.obertura = false;
		partida = new Partida();
		usuariTorn = 0;		// Usuari null fins fer el sorteig de torns
	}

	public void ferSorteigTorns(){
		throw new System.NotImplementedException();
	}

	public int usuariSeguent(){
		if(usuariTorn == 1) return 2;
		else return 1;
	}

	public void acabarCarregaPantalla(){
		throw new System.NotImplementedException();
	}

	public int detectarGuanyador(){
		throw new System.NotImplementedException();
	}
	
	public void carregaBaralles(int pT){
		// INICI DE LA PARTIDA
		Destroy(Camera.mainCamera.GetComponent("AnimacioSeleccioTorn"));
		carregaBaralla = true;
		usuariTorn = pT;
		Debug.Log("La partida la comença el jugador " + usuariTorn);
		if(IA){
			// No cal carregar cartes, ja que les cartes de la IA només les podrà veure ella...
			MenuCartesDisponibles m = (MenuCartesDisponibles) (GameObject.FindGameObjectWithTag("MenuCartesDisponibles")).GetComponent("MenuCartesDisponibles");
			m.crearCartesIA(usuariTorn);
		}else if(multijugadorLocal){
			MenuCartesDisponibles m = (MenuCartesDisponibles) (GameObject.FindGameObjectWithTag("MenuCartesDisponibles")).GetComponent("MenuCartesDisponibles");
			m.crearCartesMultijugadorLocal(usuariTorn);
		}else if (multijugadorOnline){
		}
	}
	
	public void mortPersonatge(Personatge p){
		// Destroy(p.gameObject);
		// Destroy(p);
		p.renderer.enabled = false;
		p.estatAnterior = p.estat;
		p.estat = new EstatPersonatgeMort(p);
	}
	
	public void fiBatalla(){
		// Creació de l'animació que ensenya les cartes noves
		// Quan es completi l'animació, es dona l'ordre de sortir de la pantalla
		fiPantalla();
	}
	
	public void avisarIA(){
		if(usuariTorn == 2){
			IA ia = (IA) Camera.mainCamera.gameObject.GetComponent("IA");
			ia.activar();
		}
	}
	
	public void augmentarAtacRebut(int a){
		atacRebut += a;
	}
	
	public void augmentarAtacFet(int a){
		atacFet += a;
	}
	
	public void reduirAtacFet(int a){
		atacFet -= a;
	}
	
	public void augmentarCartesUtilitzades(){
		cartesUtilitzades++;
	}
	
	public void reduirCartesUtilitzades(){
		cartesUtilitzades--;
	}
	
	public void augmentarAccions(){
		nombreAccions += 5;
	}
	
	public void augmentarPersonatgesUtilitzats(){
		personatgesUtilitzats++;
	}
	
	public void reduirPersonatgesUtilitzats(){
		personatgesUtilitzats--;
	}
	
	public void augmentarBonificacionsUtilitzades(){
		bonificacionsUtilitzades++;
	}
	
	public void reduirBonificacionsUtilitzades(){
		bonificacionsUtilitzades--;
	}
}


